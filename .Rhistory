ggplot(df, aes(day, richness.norm, colour=sample, group=patient))+
geom_point(size=3)+
scale_color_manual(values=c("red", "blue", "orange", "purple", "green"))+
theme_bw()+
geom_line(colour="grey")+
facet_wrap(~patient)
ggplot(df, aes(day, richness.norm, colour=sample, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=c("red", "blue", "orange", "purple", "green"))+
theme_bw()+
facet_wrap(~patient)
ggplot(df, aes(day, richness.norm, colour=sample, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=c("red", "blue", "orange", "purple", "green"))+
theme_bw()+
facet_wrap(~patient)+
ylab("Richness (relative to baseline sample)")
unlink('microbiome-practical_cache', recursive = TRUE)
shannon <- diversity(t(mOTUs), index = "shannon")
richness <- apply(mOTUs, FUN=nnzero, MARGIN=2)
mOTUs <- read.table('data/annotated.mOTU.rel_abund.rarefied.tsv',
sep='\t',
header=T,
row.names = 1)
shannon <- diversity(t(mOTUs), index = "shannon")
richness <- apply(mOTUs, FUN=nnzero, MARGIN=2)
length(shannon)
length(richness)
require(Matrix)
df <- data.frame(cbind(shannon, richness, gsub(".*_", "", colnames(mOTUs))), gsub("_.*", "", colnames(mOTUs)))
colnames(df) <- c("shannon", "richness", "sample", "patient")
# Order samples
df$sample[which(df$sample=="Dag4opt")] <- "Dag4"
df$sample[which(df$sample=="Dag8opt")] <- "Dag8"
df$sample <- ordered(df$sample, levels=c("Dag0", "Dag4", "Dag8","Dag42", "Dag180"))
# Convert diversities to numeric
df$shannon <- as.numeric(as.character(df$shannon))
df$richness <- as.numeric(as.character(df$richness))
# Order by sample
df <- df[order(df$sample),]
# Normalised richness (relative to each individual baseline)
# Normalised richness (relative to each individual baseline)
df$richness.norm <- sapply(rownames(df),
function(x) df[x,"richness"] - df[which(df$patient==gsub("_.*", "", x) & df$sample=="Dag0"),"richness"])
# Date as actual number
df$day <- as.numeric(gsub("Dag", "", df$sample))
plot(shannon, richness)
plot(shannon, richness, pch=19)
install.packages('vegan')
install.packages("vegan")
head(mOTUs[,20])
head(mOTUs[,])
head(mOTUs[,grep("ERAS1", colnames(mOTUs))])
head(mOTUs[,grep("ERAS1_", colnames(mOTUs))])
head(mOTUs[,grep("ERAS2_", colnames(mOTUs))])
head(mOTUs[,grep("ERAS3_", colnames(mOTUs))])
head(mOTUs[,c("ERAS3_Dag4")])
head(mOTUs[,c("ERAS3_Dag0","ERAS3_Dag4")])
head(colnames(mOTUs))
colSums(mOTUs)
table(colSums(mOTUs)==1)
colSums(mOTUs)
colSums(mOTUs)==1
colSums(mOTUs)
head(colSums(mOTUs))
head(colSums(mOTUs))
0.000392 * 100
1/14e6
1/14e6 * 100
1/10e6 * 100
1/10,000 * 100
1/10000 * 100
require(vegan)
?vegan
require(Matrix)
?Matrix
diversity(t(mOTUs), index = "richness")
diversity(t(mOTUs), index = "simpson")
?vegan
?diversity
H = - 2 * (0.5 * log(0.5))
rownames(mds.df)
mds.df <- data.frame(metaMDS(t(mOTUs))$points)
mds.df$patient <- gsub(pattern = "_.*",
replacement = "",
rownames(mds.df))
mds.df$day <- gsub(pattern = ".*_",
replacement = "",
rownames(mds.df))
# Sort out 'opt' at end of some day IDs
mds.df$day <- gsub("opt", "", mds.df$day)
ggplot(mds.df, aes(MDS1, MDS2, colour=as.factor(day)))+
geom_point(size=4)+
theme_bw()
mds.df$richness <- richness[rownames(mds.df)]
mds.df$shannon <- shannon[rownames(mds.df)]
head(mds.df)
head(mds.df$richness)
mds.df$richness.normalised <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] -
mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$sample=="Dag0"),"richness"])
head(mds.df)
tail(mds.df)
mds.df$richness.normalised <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] -
mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$day=="Dag0"),"richness"])
head(mds.df)
ggplot(mds.df, aes(MDS1, MDS2, colour=as.factor(day), size=richness))+
geom_point()+
theme_bw()
# Chunk 1: libraries
require(vegan) # Community ecology package, containing tools for diversity analysis, ordination and analysis of dissimilarities
require(ggplot2) # Plotting package
require(Matrix) # Matrix classes and methods
# Chunk 2: mOTUs
mOTUs <- read.csv('data/annotated.mOTU.rel_abund.rarefied.tsv',
sep='\t',
header=T,
row.names = 1)
# Chunk 3: inspect_dataset_1
head(colnames(mOTUs))
# Chunk 4: inspect_dataset_2
head(rownames(mOTUs))
# Chunk 5: column_sums
head(colSums(mOTUs))
# Chunk 6: inspect_dataset
head(mOTUs[,c("ERAS3_Dag0","ERAS3_Dag4")])
# Chunk 7: create_MDS
mds.df <- data.frame(metaMDS(t(mOTUs))$points)
# Chunk 8: head_MDS
head(mds.df)
# Chunk 9: data_format
mds.df$patient <- gsub(pattern = "_.*",
replacement = "",
rownames(mds.df))
mds.df$day <- gsub(pattern = ".*_",
replacement = "",
rownames(mds.df))
# Sort out 'opt' at end of some day IDs
mds.df$day <- gsub("opt", "", mds.df$day)
# Chunk 10: plot_MDS
ggplot(mds.df, aes(MDS1, MDS2, colour=as.factor(day)))+
geom_point(size=4)+
theme_bw()
# Chunk 11: richness
richness <- apply(mOTUs, FUN=nnzero, MARGIN=2)
# Chunk 12: shannon
shannon <- diversity(t(mOTUs), index = "shannon")
# Chunk 13: shannon_calculation
H = - 2 * (0.5 * log(0.5))
print(H)
# Chunk 14: correlation_diversity_indices
plot(shannon, richness, pch=19)
# Chunk 15: reforat_datasets
mds.df$richness <- richness[rownames(mds.df)]
mds.df$shannon <- shannon[rownames(mds.df)]
# Chunk 16: plot_MDS_richness
ggplot(mds.df, aes(MDS1, MDS2, colour=as.factor(day), size=richness))+
geom_point()+
theme_bw()
# Chunk 17: normalise_richness
mds.df$richness.normalised <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] -
mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$day=="Dag0"),"richness"])
# Chunk 18: reformat_datasets
df <- data.frame(cbind(shannon, richness, gsub(".*_", "", colnames(mOTUs))), gsub("_.*", "", colnames(mOTUs)))
colnames(df) <- c("shannon", "richness", "sample", "patient")
# Order samples
df$sample[which(df$sample=="Dag4opt")] <- "Dag4"
df$sample[which(df$sample=="Dag8opt")] <- "Dag8"
df$sample <- ordered(df$sample, levels=c("Dag0", "Dag4", "Dag8","Dag42", "Dag180"))
# Convert diversities to numeric
df$shannon <- as.numeric(as.character(df$shannon))
df$richness <- as.numeric(as.character(df$richness))
# Order by sample
df <- df[order(df$sample),]
# Normalised richness (relative to each individual baseline)
# Normalised richness (relative to each individual baseline)
df$richness.norm <-
# Date as actual number
df$day <- as.numeric(gsub("Dag", "", df$sample))
# Chunk 19
ggplot(df, aes(day, richness.norm, colour=sample, group=patient))+
geom_point(size=3)+
scale_color_manual(values=c("red", "blue", "orange", "purple", "green"))+
theme_bw()+
geom_line(colour="grey")
# Chunk 20
ggplot(df, aes(day, richness.norm, colour=sample, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=c("red", "blue", "orange", "purple", "green"))+
theme_bw()+
facet_wrap(~patient)+
ylab("Richness (relative to baseline sample)")
unlink('microbiome-practical_cache', recursive = TRUE)
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()
mds.df$day <- ordered(mds.df$day,
levels=c("Dag0", "Dag4", "Dag8", "Dag42", "Dag180"))
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")+geom_line()
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")+geom_line(aes(group=patient))
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")+geom_line(aes(group=patient), colour="black")
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")+geom_line(aes(group=patient), colour="black")+facet_wrap(~patient)
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")+geom_path(aes(group=patient), colour="black")+facet_wrap(~patient)
mds.df <- mds.df[order(mds.df$day),]
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")+geom_path(aes(group=patient), colour="black")+facet_wrap(~patient)
require(vegan) # Community ecology package, containing tools for diversity analysis, ordination and analysis of dissimilarities
require(ggplot2) # Plotting package
require(Matrix) # Matrix classes and methods
mOTUs <- read.csv('data/annotated.mOTU.rel_abund.rarefied.tsv',
sep='\t',
header=T,
row.names = 1)
head(colnames(mOTUs))
head(rownames(mOTUs))
head(colSums(mOTUs))
head(colSums(mOTUs))
head(mOTUs[,c("ERAS3_D0","ERAS3_D4")])
mds.df <- data.frame(metaMDS(t(mOTUs))$points)
head(mds.df)
mds.df$patient <- gsub(pattern = "_.*",
replacement = "",
rownames(mds.df))
mds.df$day <- gsub(pattern = ".*_",
replacement = "",
rownames(mds.df))
# Sort out 'opt' at end of some day IDs
mds.df$day <- gsub("opt", "", mds.df$day)
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")
mds.df$day <- ordered(mds.df$day,
levels=c("D0", "D4", "D8", "D42", "D180"))
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_brewer(palette="Set1")
day.colours <- c("#D4281E", "#6696C7", "#ED7B00","#B35ABE","#75C643")
ggplot(mds.df, aes(MDS1, MDS2, colour=day))+
geom_point(size=4)+
theme_bw()+
scale_color_manual(values=day.colours)
ggplot(mds.df, aes(day, richness))+
geom_boxplot()+
geom_point()+
theme_bw()
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+
geom_point()+
theme_bw()+
scale_color_manual(values=day.colours)
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+
geom_point()+
theme_bw()+
scale_color_manual(values=day.colours)+
ylab("Richness")+
xlab("Timepoint")
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+
geom_point(size=3)+
theme_bw()+
scale_color_manual(values=day.colours)+
ylab("Richness")+
xlab("Timepoint")
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+
geom_point(size=3)+
theme_bw()+
scale_color_manual(values=day.colours)+
ylab("Richness")+
xlab("Timepoint")+
theme(legend.position = "none")
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+
geom_point(size=3)+
theme_bw()+
scale_color_manual(values=day.colours)+
ylab("Richness")+
xlab("Timepoint")+
theme(legend.position = "none")
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+
geom_point(size=3)+
theme_bw()+
scale_color_manual(values=day.colours)+
ylab("Richness")+
xlab("Timepoint")+
theme(legend.position = "none")+
theme(axis.text=element_text(colour="black"))
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Timepoint")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks=seq(0,25,200))
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Timepoint")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks=seq(0,25,200), labels=seq(0,25,200))
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Timepoint")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Timepoint")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))+ # breaks every 25 for y-axis
theme(panel.grid = element_none()) # remove grid
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Timepoint")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))+ # breaks every 25 for y-axis
theme(panel.grid = element_blank()) # remove grid
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
geom_line(colour="grey", aes(group=patient))+ # add lines connecting samples from the same patient
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Timepoint")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))+ # breaks every 25 for y-axis
theme(panel.grid = element_blank()) # remove grid
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
geom_line(colour="grey", aes(group=patient))+ # add lines connecting samples from the same patient
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Time point")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))+ # breaks every 25 for y-axis
theme(panel.grid = element_blank()) # remove grid
ggplot(mds.df, aes(day, richness, colour=day))+
geom_line(colour="grey", aes(group=patient))+ # add lines connecting samples from the same patient
geom_boxplot()+ # add boxplots
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Time point")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))+ # breaks every 25 for y-axis
theme(panel.grid = element_blank()) # remove grid
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_line(colour="grey", aes(group=patient))+ # add lines connecting samples from the same patient
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Time point")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))+ # breaks every 25 for y-axis
theme(panel.grid = element_blank()) # remove grid
ggplot(mds.df, aes(day, richness, colour=day))+
geom_boxplot()+ # add boxplots
geom_line(colour="grey", aes(group=patient))+ # add lines connecting samples from the same patient
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Time point")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,200,25))+ # breaks every 25 for y-axis
theme(panel.grid = element_blank()) # remove grid
unlink('microbiome-practical_cache', recursive = TRUE)
ggplot(mds.df, aes(day, richness.norm, colour=day, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=day.colours)+
theme_bw()+
facet_wrap(~patient)+
ylab("Richness (relative to baseline sample)")
mds.df$richness.norm <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] - mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$sample=="D0"),"richness"])
ggplot(mds.df, aes(day, richness.norm, colour=day, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=day.colours)+
theme_bw()+
facet_wrap(~patient)+
ylab("Richness (relative to baseline sample)")
ggplot(mds.df, aes(day, richness.norm, colour=day, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)
head(mds.df$ri])
head(mds.df$richness.norm)
sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] - mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$sample=="D0"),"richness"])
mds.df[,"richness"]
ggplot(mds.df, aes(MDS1, MDS2, colour=as.factor(day), size=richness))+
geom_point()+
theme_bw()
head(mds.df)
ggplot(mds.df, aes(MDS1, MDS2, colour=day, size=richness))+
geom_point()+
theme_bw()
mds.df$richness.norm <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] - mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$sample=="D0"),"richness"])
ggplot(mds.df, aes(day, richness.norm, colour=day, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=day.colours)+
theme_bw()+
facet_wrap(~patient)+
ylab("Richness (relative to baseline sample)")
head(mds.df)
mds.df$richness.norm <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] - mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$day=="D0"),"richness"])
ggplot(mds.df, aes(day, richness.norm, colour=day, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=day.colours)+
theme_bw()+
facet_wrap(~patient)+
ylab("Richness (relative to baseline sample)")
mds.df$richness.norm <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] - mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$day=="D0"),"richness"])
head(mds.df)
mds.df$richness <- richness[rownames(mds.df)]
mds.df$shannon <- shannon[rownames(mds.df)]
mds.df$richness.norm <- sapply(rownames(mds.df),
function(x) mds.df[x,"richness"] - mds.df[which(mds.df$patient==gsub("_.*", "", x) & mds.df$day=="D0"),"richness"])
ggplot(mds.df, aes(day, richness.norm, colour=day, group=patient))+
geom_line(colour="grey")+
geom_point(size=3)+
scale_color_manual(values=day.colours)+
theme_bw()+
facet_wrap(~patient)+
ylab("Richness (relative to baseline sample)")
head(mds.df)
unlink('microbiome-practical_cache', recursive = TRUE)
ggplot(mds.df, aes(day, shannon, colour=day))+
geom_boxplot()+ # add boxplots
geom_line(colour="grey", aes(group=patient))+ # add lines connecting samples from the same patient
geom_point(size=3)+ # add points for individual samples
theme_bw()+ # black-and-white theme for plot
scale_color_manual(values=day.colours)+ # manual colours for days
ylab("Richness")+ # y-axis label
xlab("Time point")+ # x-axis label
theme(legend.position = "none")+ # no legend
theme(axis.text=element_text(colour="black"))+ # change axis label text to black (from grey)
scale_y_continuous(breaks = seq(0,4,1))+ # breaks every 1 for y-axis
theme(panel.grid = element_blank()) # remove grid
unlink('microbiome-practical_cache', recursive = TRUE)
